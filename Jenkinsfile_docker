pipeline {
    // agent any
    agent {
        // choose an agent where docker is installed
        label 'scan-rl-secure-dev'
    }

    environment {
        ARTIFACT2SCAN="struts2-showcase.war"
    }

    stages {
        
        stage('# Build') {
            steps {
                withMaven( maven: 'mvn3' ) {
                    sh 'mvn clean package'
                }
            }
        }

        stage('# Test rl-secure') {
            environment {
                RLSECURE_SITE_KEY = credentials('rl-secure-site-key')
                RLSECURE_ENCODED_LICENSE = credentials('rl-secure-encoded-key')
            }

            steps {
                sh '''
                    # dont let docker create directory's they will be created root:root
                    # if the jenkins job creates them,
                    # they will be the user you expect (e.g. jenkins:jenkins)
                    mkdir -p $WORKSPACE/RLreport/$BUILD_NUMBER

                    docker run --rm -u \$(id -u):\$(id -g) \
                        -e RLSECURE_ENCODED_LICENSE=$RLSECURE_ENCODED_LICENSE \
                        -e RLSECURE_SITE_KEY=$RLSECURE_SITE_KEY \
                        -v "$WORKSPACE/target:/packages:ro" \
                        -v "$WORKSPACE/RLreport/$BUILD_NUMBER:/report" \
                        reversinglabs/rl-scanner:latest \
                            rl-scan \
                                --package-path=/packages/$ARTIFACT2SCAN \
                                --report-path=/report \
                                --report-format=all
                '''
            }
        }
    }

    post {
        always {
            sh '''
                # delete first: so you never look at possible data from a earlier run
                rm -rf RLreport/latest &&
                mkdir -p RLreport/latest &&
                cp -r RLreport/$BUILD_NUMBER/* RLreport/latest/
            '''

            archiveArtifacts artifacts: 'RLreport/latest/*.json',
                onlyIfSuccessful: false

            // note that if the job never succeeds due to a error in jenkins the report link never shows
            // after the first fully ok job the link exists and is updated also on failure
            publishHTML (
                target: [
                    allowMissing: true,
                    alwaysLinkToLastBuild: true,
                    keepAll: false,
                    reportDir: 'RLreport/latest',
                    reportFiles: 'rl-html/sdlc.html',
                    reportName: 'ReversingLabsSdlcReport',
                ]
            )
        }
    }
}
